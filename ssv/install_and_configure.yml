---
- hosts: all
  become: yes
  vars:
    docker_compose_version: "1.27.4"
  tasks:

    - name: Upgrade all apt packages
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg-agent

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Allow 'ssv' user to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%ssv'
        line: '%ssv ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Add sudoers users to docker group
      user:
        name=ssv
        groups=docker
        append=yes
        state=present
        createhome=yes

    - name: Download docker-compose {{ docker_compose_version }}
      get_url:
        url : https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        dest: ~/docker-compose
        mode: '+x'

    - name: Check docker-compose exists
      stat: path=~/docker-compose
      register: docker_compose

    - name: Move docker-compose to /usr/local/bin/docker-compose
      command: mv ~/docker-compose /usr/local/bin/docker-compose
      when: docker_compose.stat.exists

    - name: generate operator keys
      command: docker run --rm -it 'bloxstaking/ssv-node:latest' /go/bin/ssvnode generate-operator-keys
      register: keys

    - name: get pk
      set_fact:
        pk: "{{ keys.stdout | regex_findall('\"pk\": \"(.*)\"') | first }}"

    - name: get sk
      set_fact:
        sk: "{{ keys.stdout | regex_findall('\"sk\": \"(.*)\"') | first }}"

    - name: save keys
        copy:
          dest: /home/ssv/keys.txt
          content: |
            pk: {{ pk }}
            sk: {{ sk }}

    - name: download sample config.yaml from blox
      get_url: url=https://raw.githubusercontent.com/bloxapp/ssv/main/config/config.example.yaml dest=/home/ssv/config.yaml
      become: yes
      become_user: ssv

    - name: configure config.yaml file - beaconnode address
      replace:
        path: /home/ssv/config.yaml
        regexp: 'BeaconNodeAddr: example.url'
        replace: "BeaconNodeAddr: {{ cc_host }}"
      become: yes
      become_user: ssv

    - name: configure config.yaml file - execution client address
      replace:
        path: /home/ssv/config.yaml
        regexp: 'ETH1Addr: example.url'
        replace: "ETH1Addr: {{ ec_host }}"
      become: yes
      become_user: ssv

    - name: configure config.yaml file - registry contract address
      replace:
        path: /home/ssv/config.yaml
        regexp: 'RegistryContractAddr: example.address'
        replace: "RegistryContractAddr: 0x687fb596F3892904F879118e2113e1EEe8746C2E"
      become: yes
      become_user: ssv

    - name: configure config.yaml file - operator private key
      replace:
        path: /home/ssv/config.yaml
        regexp: 'OperatorPrivateKey:'
        replace: 'OperatorPrivateKey: {{ sk }}'
      become: yes
      become_user: ssv

    - name: configure config.yml file - add MetricsAPIPort
      lineinfile:
        path: /home/ssv/config.yml
        line: "MetricsAPIPort: 15000"
        insertbefore: BOF
      become: yes
      become_user: ssv

    - name: switch off the built in time synchronization. Ignore result if already turned off
      shell: timedatectl set-ntp no
      ignore_errors: yes

    - name: install ntp
      apt:
        name: "ntp"
        state: present
        update_cache: yes

    - name: Make sure NTP is started up
      service:
        name: ntp
        state: started
        enabled: yes

    - name: start ssv node
      command: docker run -d --restart unless-stopped --name=ssv_node -e CONFIG_PATH=./config.yaml -p 13000:13000 -p 12000:12000/udp -v /home/ssv/config.yaml:/config.yaml -v /home/ssv:/data --log-opt max-size=500m --log-opt max-file=10 -it 'bloxstaking/ssv-node:latest' make BUILD_PATH=/go/bin/ssvnode start-node
      become: yes
      become_user: ssv
      args:
        chdir: /home/ssv/

    - name: spot check if pk looks good
      ansible.builtin.debug:
        msg: "{{ pk }}"

    - name: spot check if sk looks good
      ansible.builtin.debug:
        msg: "{{ sk }}"
