---
#Provision some instances:
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/all
  - group_vars/tokens

  tasks:

    - name: add public ssh key to digitalocean account
      digital_ocean_sshkey:
        name: "ETH2"
        oauth_token: "{{ digital_ocean_token }}"
        ssh_pub_key: "{{lookup('file', '~/.ssh/do_key.pub') }}"
        state: present
      register: sshkey_result

    - name: create a new droplet assigning the key
      community.digitalocean.digital_ocean_droplet:
        name: "{{ item }}"
        oauth_token: "{{ digital_ocean_token }}"
        size: "{{ droplet_size }}"
        region: "{{ droplet_region }}"
        image: "{{ droplet_image }}"
        wait_timeout: 600
        unique_name: yes
        ssh_keys: [ "{{ sshkey_result.data.ssh_key.id }}" ]
        state: present
      with_inventory_hostnames:
        - ssv
      register: droplet_result

    - name: Tag a resource; creating the tag if it does not exist
      community.digitalocean.digital_ocean_tag:
        name: "{{ tag_name }}"
        oauth_token: "{{ digital_ocean_token }}"
        resource_id: "{{ item.data.droplet.id }}"
        state: present
      with_items: "{{ droplet_result.results }}"

    - name: save ip and hostname to local hosts file /etc/hosts
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: '.*{{ item.data.droplet.name }}$'
        line: "{{ item.data.droplet.networks.v4[0].ip_address }}  {{ item.data.droplet.name }}"
      with_items: "{{ droplet_result.results }}"
